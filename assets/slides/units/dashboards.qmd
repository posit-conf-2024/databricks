---
engine: knitr
---

```{r}
#| include: false
if(!("no_dashboards" %in% ls())) no_dashboards <- 1
```

# {background-image="assets/background/content-slide.svg" background-size="1700px" background-color="#2a7070"}

:::{.custom-unit-number}
Unit `r no_dashboards`
:::

:::{.custom-unit-title}
Dashboards
:::

<br/><br/>

## [Why dashboards?]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

<br/>

[ðŸ”‘ Two fundamental points:]{style="font-size:90px;"}

:::{.custom-subtitle}
:::{.incremental1}
- [App load time matters! **The faster the better!**]{style="font-size:80px"}
- [Download **raw** data **only** if there is no other option]{style="font-size:80px"}
:::
:::

## [Important features]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

:::{.columns}
:::{.column width="55%"}
:::{.custom-subtitle}
- [Data driven dropdowns]{style="font-size:80px;"}
:::
:::
:::

![](assets/dashboards/dashboard-dropdown.png){.absolute top="120" left="875" width="750"}

## [Important features]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

:::{.columns}
:::{.column width="55%"}
:::{.custom-subtitle}
- [Data driven dropdowns]{style="font-size:80px;"}
- [Interactive plots (hover over)]{style="font-size:80px;"}
:::
:::
:::

![](assets/dashboards/dashboard-selection.png){.absolute top="120" left="875" width="750"}

## [Important features]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

:::{.columns}
:::{.column width="55%"}
:::{.custom-subtitle}
- [Data driven dropdowns]{style="font-size:80px;"}
- [Interactive plots (hover over)]{style="font-size:80px;"}
- [Drill down when interacting with the plot]{style="font-size:80px;"}
:::
:::
:::

![](assets/dashboards/dashboard-drill-down.png){.absolute top="120" left="875" width="750"}

## {background-image="assets/background/boxed-green.svg" background-size="1700px" background-color="#799857"}

:::{.custom-exercise}
Exercise `r no_dashboards`.1
:::

## {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

:::{.columns}
:::{.column width="55%"}
:::{.custom}
<br><br>
[Data driven dropdowns]{style="font-size:140px;"}
:::
:::
:::

![](assets/dashboards/dashboard-dropdown.png){.absolute top="50" left="875" width="750"}

## [When do we need them?]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

:::{.custom-subtitle}
When options in the data change regularly
:::

![](assets/dashboards/data-driven-1.png){.absolute top="270" left="455"}

## {background-image="assets/background/boxed-green.svg" background-size="1700px" background-color="#799857"}

:::{.custom-exercise}
Exercise `r no_dashboards`.2
:::

## [Adding the plot]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

:::{.columns}
:::{.column width="20%"}
:::
:::{.column width="80%"}
[Move the code from the previous unit to the app]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::

:::{.columns}
:::{.column}
:::{.custom-smallest}
```r
sales_by_year <- prep_orders |>
  filter(n_name == country) |>
  group_by(order_year) |>
  summarise(
    total_price = sum(o_totalprice, na.rm = TRUE)
  ) |>
  collect()
  
breaks <- as.double(quantile(c(0, max(sales_by_year$total_price))))
breaks_labels <- paste(round(breaks / 1000000000, 1), "B")

sales_by_year |>
  ggplot() +
  geom_col(aes(order_year, total_price)) +
  scale_x_continuous(breaks = unique(sales_by_year$order_year)) +
  scale_y_continuous(breaks = breaks, labels = breaks_labels) +
  xlab("Year") +
  ylab("Total Sales") +
  labs(title = "Sales by year", subtitle = country) +
  theme_light()
```
:::
:::
:::{.column}
:::{.custom-smallest}

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "|8|"
shinyApp(
  ui = fluidPage(
    selectInput("country", "Country:", choices = countries, selected = "FRANCE"),
    plotOutput("sales_plot")
  ),
  server = function(input, output) {
    output$sales_plot <- renderPlot({
      # Your code here
    })
  },
  options = list(height = 200)
)
```
:::
:::
:::

## [Adding the plot]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

:::{.custom-subtitle}
Prefix `input$` to both instances of `country`
:::

:::{.custom-smallest}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "|2,16"
sales_by_year <- prep_orders |>
  filter(n_name == country) |>
  group_by(order_year) |>
  summarise(total_price = sum(o_totalprice, na.rm = TRUE)) |>
  collect()

sales_by_year |>
  ggplot() +
  geom_col(aes(order_year, total_price)) +
  scale_x_continuous(breaks = unique(sales_by_year$order_year)) +
  scale_y_continuous(breaks = breaks, labels = breaks_labels) +
  xlab("Year") +
  ylab("Total Sales") +
  labs(title = "Sales by year", subtitle = country) +
  theme_light()
```
:::

## [Adding the plot]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

:::{.custom-subtitle}
Prefix `input$` to both instances of `country`
:::

:::{.custom-smallest}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "2,14"
sales_by_year <- prep_orders |>
  filter(n_name == input$country) |>
  group_by(order_year) |>
  summarise(total_price = sum(o_totalprice, na.rm = TRUE)) |>
  collect()

sales_by_year |>
  ggplot() +
  geom_col(aes(order_year, total_price)) +
  scale_x_continuous(breaks = unique(sales_by_year$order_year)) +
  scale_y_continuous(breaks = breaks, labels = breaks_labels) +
  xlab("Year") +
  ylab("Total Sales") +
  labs(title = "Sales by year", subtitle = input$country) +
  theme_light()
```
:::

## {background-image="assets/background/boxed-green.svg" background-size="1700px" background-color="#799857"}

:::{.custom-exercise}
Exercise `r no_dashboards`.3
:::

## {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

:::{.columns}
:::{.column width="55%"}
:::{.custom}
<br><br>
[Interactive Plots]{style="font-size:140px;"}
:::
:::
:::

![](assets/dashboards/dashboard-selection.png){.absolute top="50" left="875" width="750"}

## [ggiraph]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

![](assets/dashboards/ggiraph.png){.absolute top="0" left="1400"}

:::{.custom-smaller}
:::{incremental1}
- Allows you to create dynamic `ggplot` graphs. 
- Adds tooltips, hover effects, and JavaScript actions 
- Enables selecting elements of a plot inside a `shiny` app
- Adds interactivity to `ggplot` geometries, legends and theme elements
:::
:::


:::{.footer}
[https://davidgohel.github.io/ggiraph/]{style="font-size:40px;"}
:::

## [Interactive Plots]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="30%"}
:::
:::{.column width="70%"}
[Replace with `ggiraph` functions]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::
:::{.custom-smallest}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "|3,6,16"
  ui = fluidPage(
    selectInput("country", "Country:", choices = countries, selected = "FRANCE"),
    plotOutput()("sales_plot")
  ),
  server = function(input, output) {
    output$sales_plot <- renderPlot()({
      sales_by_year <- prep_orders |>
        filter(n_name == !!input$country) |>
        group_by(order_year) |>
        summarise(
          total_price = sum(o_totalprice, na.rm = TRUE)
        ) |>
        collect()
      sales_by_year |>
        ggplot() +
        geom_col(aes(order_year, total_price)) +
        scale_x_continuous(breaks = unique(sales_by_year$order_year)) +
```
:::

## [Interactive Plots]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="30%"}
:::
:::{.column width="70%"}
[Replace with `ggiraph` functions]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::
:::{.custom-smallest}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "3,6,16"
  ui = fluidPage(
    selectInput("country", "Country:", choices = countries, selected = "FRANCE"),
    girafeOutput("sales_plot")
  ),
  server = function(input, output) {
    output$sales_plot <- renderGirafe({
      sales_by_year <- prep_orders |>
        filter(n_name == !!input$country) |>
        group_by(order_year) |>
        summarise(
          total_price = sum(o_totalprice, na.rm = TRUE)
        ) |>
        collect()
      sales_by_year |>
        ggplot() +
        geom_col_interactive(aes(order_year, total_price)) +
        scale_x_continuous(breaks = unique(sales_by_year$order_year)) +
```
:::


## [Interactive Plots]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="30%"}
:::
:::{.column width="70%"}
[Add `girafe()` output step]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::
:::{.sample-code}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "|1"
      sales_by_year |>
        ggplot() +
        geom_col_interactive(aes(order_year, total_price)) +
        scale_x_continuous(breaks = unique(sales_by_year$order_year)) +
        scale_y_continuous(breaks = breaks, labels = breaks_labels) +
        xlab("Year") +
        ylab("Total Sales") +
        labs(title = "Sales by year", subtitle = input$country) +
        theme_light()
```
:::

## [Interactive Plots]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="30%"}
:::
:::{.column width="70%"}
[Add `girafe()` output step]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::
:::{.sample-code}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "1,11"
      g <- sales_by_year |>
        ggplot() +
        geom_col_interactive(aes(order_year, total_price)) +
        scale_x_continuous(breaks = unique(sales_by_year$order_year)) +
        scale_y_continuous(breaks = breaks, labels = breaks_labels) +
        xlab("Year") +
        ylab("Total Sales") +
        labs(title = "Sales by year", subtitle = input$country) +
        theme_light()

      girafe(ggobj = g)
```
:::


## {background-image="assets/background/boxed-green.svg" background-size="1700px" background-color="#799857"}

:::{.custom-exercise}
Exercise `r no_dashboards`.4
:::

## {background-image="assets/background/thank-you.svg" background-size="1700px" background-color="#2a7070"} {visibility="hidden"}

![](assets/background/racoon.jpg){.absolute top="220" left="900" width="430"}

## {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

:::{.columns}
:::{.column width="55%"}
:::{.custom}
<br><br><br><br>
[Plot drill-down]{style="font-size:140px;"}
:::
:::
:::

![](assets/dashboards/dashboard-drill-down.png){.absolute top="50" left="875" width="750"}

## [Plot drill down]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="3%"}
:::
:::{.column width="97%"}
[Add a `showModal()` that reacts when a column in the plot is clicked]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::
:::{.custom-smallest}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "|"
      g <- sales_by_year |>
        ggplot() +
        geom_col_interactive(aes(order_year, total_price, data_id = order_year, tooltip = total_price)) +
        scale_x_continuous(breaks = unique(sales_by_year$order_year)) +
        scale_y_continuous(breaks = breaks, labels = breaks_labels) +
        xlab("Year") +
        ylab("Total Sales") +
        labs(title = "Sales by year", subtitle = input$country) +
        theme_light()

      girafe(ggobj = g)
    })
  },
  options = list(height = 200)
```
:::

## [Plot drill down]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="3%"}
:::
:::{.column width="97%"}
[Add a `showModal()` that reacts when a column in the plot is clicked]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::
:::{.custom-smallest}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "|14-16"
      g <- sales_by_year |>
        ggplot() +
        geom_col_interactive(aes(order_year, total_price, data_id = order_year, tooltip = total_price)) +
        scale_x_continuous(breaks = unique(sales_by_year$order_year)) +
        scale_y_continuous(breaks = breaks, labels = breaks_labels) +
        xlab("Year") +
        ylab("Total Sales") +
        labs(title = "Sales by year", subtitle = input$country) +
        theme_light()

      girafe(ggobj = g)
    })
    
    observeEvent(input$sales_plot_selected, {
      showModal(modalDialog())
      })
  },
  options = list(height = 200)
```
:::

## [Plot drill down]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="7%"}
:::
:::{.column width="93%"}
[Make the plot allow only 1 column to be selected at the time]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::
:::{.custom-smallest}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "|11"
      g <- sales_by_year |>
        ggplot() +
        geom_col_interactive(aes(order_year, total_price, data_id = order_year, tooltip = total_price)) +
        scale_x_continuous(breaks = unique(sales_by_year$order_year)) +
        scale_y_continuous(breaks = breaks, labels = breaks_labels) +
        xlab("Year") +
        ylab("Total Sales") +
        labs(title = "Sales by year", subtitle = input$country) +
        theme_light()

      girafe(ggobj = g)
    })
        
    observeEvent(input$sales_plot_selected, {
      showModal(modalDialog())
      })        
  },
  options = list(height = 200)
```
:::

## [Plot drill down]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="7%"}
:::
:::{.column width="93%"}
[Make the plot allow only 1 column to be selected at the time]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::
:::{.custom-smallest}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "11"
      g <- sales_by_year |>
        ggplot() +
        geom_col_interactive(aes(order_year, total_price, data_id = order_year, tooltip = total_price)) +
        scale_x_continuous(breaks = unique(sales_by_year$order_year)) +
        scale_y_continuous(breaks = breaks, labels = breaks_labels) +
        xlab("Year") +
        ylab("Total Sales") +
        labs(title = "Sales by year", subtitle = input$country) +
        theme_light()

      girafe(ggobj = g, options = list(opts_selection(type = "single")))
    })
    
    observeEvent(input$sales_plot_selected, {
      showModal(modalDialog())
      })
  },
  options = list(height = 200)
```
:::

## [Plot drill down]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="10%"}
:::
:::{.column width="90%"}
[Add a dynamic title using the country and year selected]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::
:::{.sample-code}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "|2"
  observeEvent(input$sales_plot_selected, {
        showModal(modalDialog())
        })
```
:::

## [Plot drill down]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="10%"}
:::
:::{.column width="90%"}
[Add a dynamic title using the country and year selected]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::
:::{.sample-code}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "3-5"
observeEvent(input$sales_plot_selected, {
 showModal(
  modalDialog(
   title = paste0(input$country, " - ", input$sales_plot_selected)
  )
 )
```
:::

## [Plot drill down]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="1%"}
:::
:::{.column width="99%"}
[ Add a new `renderPLot()` function, with code from **Plot data by month**.]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::

:::{.custom-smallest}
```{r}
#| eval: false
#| echo: true
  output$monthly_sales <- renderPlot({
    sales_by_month <- prep_orders |>
      filter(
        n_name == !!input$country, 
        order_year == !!input$sales_plot_selected
        ) |>
      group_by(order_month) |>
      summarise(
        total_price = sum(o_totalprice, na.rm = TRUE)
      ) |>
      collect()

    breaks <- as.double(quantile(c(0, max(sales_by_month$total_price))))
    breaks_labels <- paste(round(breaks / 1000000000, 1), "B")

    sales_by_month |>
      ggplot() +
      geom_col(aes(order_month, total_price)) +
      scale_x_continuous(breaks = unique(sales_by_month$order_month)) +
      scale_y_continuous(breaks = breaks, labels = breaks_labels) +
      xlab("Year") +
      ylab("Total Sales") +
      labs(
        title = "Sales by month", 
        subtitle = paste0(input$country, " - ", input$sales_plot_selected)
        ) +
      theme_light()
    })
```
:::

## [Plot drill down]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="5%"}
:::
:::{.column width="95%"}
[Add `plotOutput("monthly_sales")` to the `modelDialog()` call]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::
:::{.sample-code}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "|"
observeEvent(input$sales_plot_selected, {
 showModal(
  modalDialog(
   title = paste0(input$country, " - ", input$sales_plot_selected)
  )
 )
```
:::

## [Plot drill down]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}
:::{.columns}
:::{.column width="5%"}
:::
:::{.column width="95%"}
[Add `plotOutput("monthly_sales")` to the `modelDialog()` call]{style="font-size:50px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::
:::{.sample-code}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "|5"
observeEvent(input$sales_plot_selected, {
 showModal(
  modalDialog(
   title = paste0(input$country, " - ", input$sales_plot_selected),
   plotOutput("monthly_sales")
  )
 )
```
:::
