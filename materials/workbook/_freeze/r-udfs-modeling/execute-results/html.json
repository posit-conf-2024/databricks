{
  "hash": "e5efbf1275da182f6d621bfa1af1093a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Modeling\"\nexecute: \n  eval: true\n  freeze: true\n---\n\n\n\n\n## Catch up {.unnumbered}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sparklyr)\nlibrary(dplyr)\nsc <- spark_connect(method = \"databricks_connect\")\n#> ! Changing host URL to: https://rstudio-partner-posit-default.cloud.databricks.com\n#> ℹ Retrieving info for cluster:'1026-175310-7cpsh3g8'\n#> ✔ Cluster: '1026-175310-7cpsh3g8' | DBR: '14.1' [484ms]\n#> \n#> ℹ Attempting to load 'r-sparklyr-databricks-14.1'\n#> ✔ Python environment: 'r-sparklyr-databricks-14.1' [1.1s]\n#> \n#> ℹ Connecting to '14.1 cluster'\n#> ✔ Connected to: '14.1 cluster' [7ms]\n#> \n```\n:::\n\n\n## Get sample of data\n\n1. Create a pointer to the `lendingclub` data. It is in the `default` schema, \ninside the `hive_metastore` catalog. And name it `lendingclub_dat`\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_dat <- tbl(sc, in_catalog(\"hive_metastore\", \"default\", \"lendingclub\"))\n```\n:::\n\n\n2. Using `slice_sample()`, download 20K records, and name it `lendingclub_sample`\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_sample <- lendingclub_dat |>  \n  slice_sample(n = 2000) |> \n  collect()\n```\n:::\n\n\n3. Preview the data using the `View()` command\n\n::: {.cell}\n\n```{.r .cell-code}\nView(lendingclub_sample)\n```\n:::\n\n\n4. Keep only `int_rate`, `term`, `bc_util`, `bc_open_to_buy` and `all_util` \nfields. Remove the percent sign out of `int_rate`, and coerce it to numeric. \nSave resulting table to a new variable called `lendingclub_prep`\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_prep <- lendingclub_sample |> \n  select(int_rate, term, bc_util, bc_open_to_buy, all_util) |> \n  mutate(\n    int_rate = as.numeric(stringr::str_remove(int_rate, \"%\"))\n    )\n```\n:::\n\n\n5. Preview the data using `glimpse()`\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(lendingclub_prep)\n#> Rows: 2,000\n#> Columns: 5\n#> $ int_rate       <dbl> 5.31, 19.42, 19.42, 10.41, 5.31, 9.58, 12.13, 11.05, 7.…\n#> $ term           <chr> \" 36 months\", \" 36 months\", \" 36 months\", \" 36 months\",…\n#> $ bc_util        <chr> \"68\", \"78.7\", \"66.8\", \"66.7\", \"26.3\", \"14.7\", \"62.2\", \"…\n#> $ bc_open_to_buy <chr> \"3938\", \"5931\", \"166\", \"3034\", \"14747\", \"6650\", \"1627\",…\n#> $ all_util       <chr> \"80\", \"77\", \"48\", \"46\", \"33\", \"15\", \"51\", \"58\", \"68\", \"…\n```\n:::\n\n\n## Create model using `tidymodels`\n\n1. Run the following code to create a `workflow` that contains the pre-processing\nsteps, and a linear regression model\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n\nlendingclub_rec <- recipe(int_rate ~ ., data = lendingclub_prep) |> \n  step_mutate(term = trimws(substr(term, 1,4))) |> \n  step_mutate(across(everything(), as.numeric)) |> \n  step_normalize(all_numeric_predictors()) |>\n  step_impute_mean(all_of(c(\"bc_open_to_buy\", \"bc_util\"))) |>   \n  step_filter(!if_any(everything(), is.na))\n\n\nlendingclub_lr <- linear_reg()\n\nlendingclub_wf <- workflow() |> \n  add_model(lendingclub_lr) |> \n  add_recipe(lendingclub_rec)\n\nlendingclub_wf\n#> ══ Workflow ════════════════════════════════════════════════════════════════════\n#> Preprocessor: Recipe\n#> Model: linear_reg()\n#> \n#> ── Preprocessor ────────────────────────────────────────────────────────────────\n#> 5 Recipe Steps\n#> \n#> • step_mutate()\n#> • step_mutate()\n#> • step_normalize()\n#> • step_impute_mean()\n#> • step_filter()\n#> \n#> ── Model ───────────────────────────────────────────────────────────────────────\n#> Linear Regression Model Specification (regression)\n#> \n#> Computational engine: lm\n```\n:::\n\n2. Fit the model in the workflow, now in a variable called `lendingclub_wf`, with\nthe `lendingclub_prep` data\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_fit <- lendingclub_wf |> \n  fit(data = lendingclub_prep)\n```\n:::\n\n\n3. Measure the performance of the model using `metrics()`. Make sure to use\n`augment()` to add the predictions first\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_fit |> \n  augment(lendingclub_prep) |> \n  metrics(int_rate, .pred)\n#> # A tibble: 3 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard       8.74 \n#> 2 rsq     standard       0.197\n#> 3 mae     standard       6.38\n```\n:::\n\n\n4. Run a histogram over the predictions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\npredict(lendingclub_fit, lendingclub_sample) |> \n  ggplot() +\n  geom_histogram(aes(.pred))\n#> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n::: {.cell-output-display}\n![](r-udfs-modeling_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Upload to Posit Connect\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(vetiver)\n\n\nv <- vetiver_model(lendingclub_fit, \"lendingclub_model\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pins)\n\nboard <- board_connect(\n  auth = \"manual\",\n  server = Sys.getenv(\"CONNECT_SERVER\"),\n  key = Sys.getenv(\"CONNECT_API_KEY\")\n)\n\nboard |> \n  vetiver_pin_write(v)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npredict_vetiver <- function(x) {\n  library(workflows)\n  board <- pins::board_connect(\n    auth = \"manual\", \n    server = \"https://connect.posit.it/\",\n    key = \"[YOUR CONNECT KEY]\"\n  )\n  model <- vetiver::vetiver_pin_read(board, \"edgar/lendingclub_model\")\n  preds <- predict(model, x)\n  x$pred <- preds[,1][[1]]\n  x[x$pred >= 20, ]\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npredict_vetiver(lendingclub_prep)\n```\n:::\n\n\n## Predict in Spark\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_dat |> \n  select(int_rate, term, bc_util, bc_open_to_buy, all_util) |> \n  spark_apply(predict_vetiver) |> \n  count()\n```\n:::\n",
    "supporting": [
      "r-udfs-modeling_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}