{
  "hash": "5f1e6a4774d885e8daac48f2d2a91c0e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Modeling\"\nexecute: \n  eval: true\n  freeze: true\n---\n\n\n\n\n## Catch up {.unnumbered}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sparklyr)\nlibrary(dplyr)\nsc <- spark_connect(method = \"databricks_connect\")\n#> ! Changing host URL to: https://rstudio-partner-posit-default.cloud.databricks.com\n#> ℹ Retrieving info for cluster:'1026-175310-7cpsh3g8'\n#> ✔ Cluster: '1026-175310-7cpsh3g8' | DBR: '14.1' [372ms]\n#> \n#> ℹ Attempting to load 'r-sparklyr-databricks-14.1'\n#> ✔ Python environment: 'r-sparklyr-databricks-14.1' [1.2s]\n#> \n#> ℹ Connecting to '14.1 cluster'\n#> ✔ Connected to: '14.1 cluster' [6ms]\n#> \n```\n:::\n\n\n## Get sample of data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_dat <- tbl(sc, in_catalog(\"hive_metastore\", \"default\", \"lendingclub\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_sample <- lendingclub_dat |>  \n  slice_sample(n = 2000) |> \n  collect()\n\nglimpse(lendingclub_sample)\n#> Rows: 2,000\n#> Columns: 145\n#> $ id                                         <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ member_id                                  <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ loan_amnt                                  <chr> \"14000\", \"30000\", \"10000\", …\n#> $ funded_amnt                                <chr> \"14000\", \"30000\", \"10000\", …\n#> $ funded_amnt_inv                            <chr> \"14000\", \"30000\", \"10000\", …\n#> $ term                                       <chr> \" 60 months\", \" 36 months\",…\n#> $ int_rate                                   <chr> \"19.42%\", \"10.90%\", \"10.90%…\n#> $ installment                                <chr> \"366.42\", \"980.75\", \"326.92…\n#> $ grade                                      <chr> \"D\", \"B\", \"B\", \"C\", \"A\", \"B…\n#> $ sub_grade                                  <chr> \"D3\", \"B4\", \"B4\", \"C1\", \"A2…\n#> $ emp_title                                  <chr> \"Plumber\", \"DECLASSIFICATIO…\n#> $ emp_length                                 <chr> \"< 1 year\", \"10+ years\", \"<…\n#> $ home_ownership                             <chr> \"RENT\", \"MORTGAGE\", \"OWN\", …\n#> $ annual_inc                                 <chr> \"110000\", \"190000\", \"70000\"…\n#> $ verification_status                        <chr> \"Source Verified\", \"Source …\n#> $ issue_d                                    <chr> \"May-18\", \"Apr-18\", \"Apr-18…\n#> $ loan_status                                <chr> \"Current\", \"Current\", \"Curr…\n#> $ pymnt_plan                                 <chr> \"n\", \"n\", \"n\", \"n\", \"n\", \"n…\n#> $ url                                        <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ desc                                       <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ purpose                                    <chr> \"debt_consolidation\", \"cred…\n#> $ title                                      <chr> \"Debt consolidation\", \"Cred…\n#> $ zip_code                                   <chr> \"935xx\", \"224xx\", \"775xx\", …\n#> $ addr_state                                 <chr> \"CA\", \"VA\", \"TX\", \"CA\", \"VA…\n#> $ dti                                        <chr> \"7.18\", \"24.99\", \"9.77\", \"2…\n#> $ delinq_2yrs                                <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ earliest_cr_line                           <chr> \"Oct-10\", \"Aug-91\", \"May-07…\n#> $ inq_last_6mths                             <chr> \"1\", \"2\", \"1\", \"2\", \"1\", \"0…\n#> $ mths_since_last_delinq                     <chr> NA, NA, NA, NA, NA, \"31\", N…\n#> $ mths_since_last_record                     <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ open_acc                                   <chr> \"5\", \"25\", \"3\", \"9\", \"13\", …\n#> $ pub_rec                                    <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ revol_bal                                  <chr> \"10533\", \"77542\", \"360\", \"6…\n#> $ revol_util                                 <chr> \"83.60%\", \"75%\", \"36%\", \"19…\n#> $ total_acc                                  <chr> \"6\", \"71\", \"5\", \"9\", \"21\", …\n#> $ initial_list_status                        <chr> \"w\", \"w\", \"w\", \"w\", \"w\", \"w…\n#> $ out_prncp                                  <chr> \"13426.86\", \"26393.83\", \"90…\n#> $ out_prncp_inv                              <chr> \"13426.86\", \"26393.83\", \"90…\n#> $ total_pymnt                                <chr> \"1450.58\", \"4867.42\", \"1301…\n#> $ total_pymnt_inv                            <chr> \"1450.58\", \"4867.42\", \"1301…\n#> $ total_rec_prncp                            <chr> \"573.14\", \"3606.17\", \"957.2…\n#> $ total_rec_int                              <chr> \"877.44\", \"1261.25\", \"344.3…\n#> $ total_rec_late_fee                         <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ recoveries                                 <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ collection_recovery_fee                    <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ last_pymnt_d                               <chr> \"Sep-18\", \"Sep-18\", \"Sep-18…\n#> $ last_pymnt_amnt                            <chr> \"366.42\", \"980.75\", \"326.92…\n#> $ next_pymnt_d                               <chr> \"Oct-18\", \"Oct-18\", \"Oct-18…\n#> $ last_credit_pull_d                         <chr> \"Sep-18\", \"Sep-18\", \"Sep-18…\n#> $ collections_12_mths_ex_med                 <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ mths_since_last_major_derog                <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ policy_code                                <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1…\n#> $ application_type                           <chr> \"Individual\", \"Individual\",…\n#> $ annual_inc_joint                           <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ dti_joint                                  <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ verification_status_joint                  <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ acc_now_delinq                             <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ tot_coll_amt                               <chr> \"0\", \"0\", \"0\", \"450\", \"0\", …\n#> $ tot_cur_bal                                <chr> \"30171\", \"558429\", \"16216\",…\n#> $ open_acc_6m                                <chr> \"1\", \"4\", \"1\", \"2\", \"1\", \"0…\n#> $ open_act_il                                <chr> \"1\", \"6\", \"1\", \"0\", \"3\", \"0…\n#> $ open_il_12m                                <chr> \"0\", \"4\", \"0\", \"0\", \"3\", \"0…\n#> $ open_il_24m                                <chr> \"0\", \"4\", \"2\", \"0\", \"5\", \"0…\n#> $ mths_since_rcnt_il                         <chr> \"27\", \"6\", \"14\", NA, \"9\", \"…\n#> $ total_bal_il                               <chr> \"19638\", \"88648\", \"15856\", …\n#> $ il_util                                    <chr> \"68\", \"72\", \"63\", NA, \"77\",…\n#> $ open_rv_12m                                <chr> \"3\", \"5\", \"2\", \"5\", \"4\", \"0…\n#> $ open_rv_24m                                <chr> \"3\", \"6\", \"2\", \"7\", \"5\", \"0…\n#> $ max_bal_bc                                 <chr> \"7942\", \"7466\", \"314\", \"229…\n#> $ all_util                                   <chr> \"73\", \"74\", \"62\", \"22\", \"24…\n#> $ total_rev_hi_lim                           <chr> \"12600\", \"102700\", \"1000\", …\n#> $ inq_fi                                     <chr> \"0\", \"0\", \"1\", \"0\", \"3\", \"1…\n#> $ total_cu_tl                                <chr> \"1\", \"37\", \"0\", \"0\", \"1\", \"…\n#> $ inq_last_12m                               <chr> \"3\", \"3\", \"2\", \"4\", \"4\", \"0…\n#> $ acc_open_past_24mths                       <chr> \"3\", \"11\", \"4\", \"7\", \"10\", …\n#> $ avg_cur_bal                                <chr> \"6034\", \"22337\", \"5405\", \"8…\n#> $ bc_open_to_buy                             <chr> \"378\", \"7234\", \"640\", \"2501…\n#> $ bc_util                                    <chr> \"96.3\", \"55.3\", \"36\", \"16\",…\n#> $ chargeoff_within_12_mths                   <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ delinq_amnt                                <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ mo_sin_old_il_acct                         <chr> \"91\", \"150\", \"131\", NA, \"16…\n#> $ mo_sin_old_rev_tl_op                       <chr> \"26\", \"320\", \"8\", \"208\", \"6…\n#> $ mo_sin_rcnt_rev_tl_op                      <chr> \"5\", \"1\", \"1\", \"0\", \"6\", \"1…\n#> $ mo_sin_rcnt_tl                             <chr> \"5\", \"1\", \"1\", \"0\", \"6\", \"9…\n#> $ mort_acc                                   <chr> \"0\", \"4\", \"0\", \"0\", \"1\", \"2…\n#> $ mths_since_recent_bc                       <chr> \"10\", \"2\", \"1\", \"1\", \"8\", \"…\n#> $ mths_since_recent_bc_dlq                   <chr> NA, NA, NA, NA, NA, \"31\", N…\n#> $ mths_since_recent_inq                      <chr> \"1\", \"1\", \"2\", \"0\", \"6\", \"1…\n#> $ mths_since_recent_revol_delinq             <chr> NA, NA, NA, NA, NA, \"31\", N…\n#> $ num_accts_ever_120_pd                      <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ num_actv_bc_tl                             <chr> \"2\", \"2\", \"2\", \"4\", \"3\", \"2…\n#> $ num_actv_rev_tl                            <chr> \"3\", \"14\", \"2\", \"5\", \"4\", \"…\n#> $ num_bc_sats                                <chr> \"2\", \"4\", \"2\", \"5\", \"8\", \"2…\n#> $ num_bc_tl                                  <chr> \"2\", \"6\", \"2\", \"5\", \"9\", \"4…\n#> $ num_il_tl                                  <chr> \"2\", \"45\", \"3\", \"0\", \"9\", \"…\n#> $ num_op_rev_tl                              <chr> \"4\", \"18\", \"2\", \"8\", \"10\", …\n#> $ num_rev_accts                              <chr> \"4\", \"22\", \"2\", \"8\", \"11\", …\n#> $ num_rev_tl_bal_gt_0                        <chr> \"3\", \"16\", \"2\", \"5\", \"4\", \"…\n#> $ num_sats                                   <chr> \"5\", \"25\", \"3\", \"9\", \"13\", …\n#> $ num_tl_120dpd_2m                           <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ num_tl_30dpd                               <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ num_tl_90g_dpd_24m                         <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ num_tl_op_past_12m                         <chr> \"3\", \"10\", \"2\", \"5\", \"7\", \"…\n#> $ pct_tl_nvr_dlq                             <chr> \"100\", \"100\", \"100\", \"100\",…\n#> $ percent_bc_gt_75                           <chr> \"100\", \"25\", \"0\", \"0\", \"0\",…\n#> $ pub_rec_bankruptcies                       <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ tax_liens                                  <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0…\n#> $ tot_hi_cred_lim                            <chr> \"41524\", \"607888\", \"26017\",…\n#> $ total_bal_ex_mort                          <chr> \"30171\", \"166190\", \"16216\",…\n#> $ total_bc_limit                             <chr> \"10100\", \"16200\", \"1000\", \"…\n#> $ total_il_high_credit_limit                 <chr> \"28924\", \"110188\", \"25017\",…\n#> $ revol_bal_joint                            <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ sec_app_earliest_cr_line                   <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ sec_app_inq_last_6mths                     <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ sec_app_mort_acc                           <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ sec_app_open_acc                           <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ sec_app_revol_util                         <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ sec_app_open_act_il                        <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ sec_app_num_rev_accts                      <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ sec_app_chargeoff_within_12_mths           <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ sec_app_collections_12_mths_ex_med         <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ sec_app_mths_since_last_major_derog        <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ hardship_flag                              <chr> \"N\", \"N\", \"N\", \"N\", \"N\", \"N…\n#> $ hardship_type                              <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ hardship_reason                            <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ hardship_status                            <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ deferral_term                              <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ hardship_amount                            <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ hardship_start_date                        <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ hardship_end_date                          <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ payment_plan_start_date                    <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ hardship_length                            <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ hardship_dpd                               <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ hardship_loan_status                       <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ orig_projected_additional_accrued_interest <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ hardship_payoff_balance_amount             <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ hardship_last_payment_amount               <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ disbursement_method                        <chr> \"Cash\", \"Cash\", \"Cash\", \"Ca…\n#> $ debt_settlement_flag                       <chr> \"N\", \"N\", \"N\", \"N\", \"N\", \"N…\n#> $ debt_settlement_flag_date                  <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ settlement_status                          <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ settlement_date                            <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ settlement_amount                          <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ settlement_percentage                      <chr> NA, NA, NA, NA, NA, NA, NA,…\n#> $ settlement_term                            <chr> NA, NA, NA, NA, NA, NA, NA,…\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_prep <- lendingclub_sample |> \n  select(int_rate, term, bc_util, bc_open_to_buy, all_util) |> \n  mutate(\n    int_rate = as.numeric(stringr::str_remove(int_rate, \"%\"))\n    )\n\nglimpse(lendingclub_prep)\n#> Rows: 2,000\n#> Columns: 5\n#> $ int_rate       <dbl> 19.42, 10.90, 10.90, 13.06, 6.07, 10.07, 14.03, 7.34, 1…\n#> $ term           <chr> \" 60 months\", \" 36 months\", \" 36 months\", \" 36 months\",…\n#> $ bc_util        <chr> \"96.3\", \"55.3\", \"36\", \"16\", \"4.7\", \"88.4\", \"22.9\", \"14.…\n#> $ bc_open_to_buy <chr> \"378\", \"7234\", \"640\", \"25018\", \"37087\", \"3708\", \"47620\"…\n#> $ all_util       <chr> \"73\", \"74\", \"62\", \"22\", \"24\", \"88\", \"47\", \"55\", \"54\", \"…\n```\n:::\n\n\n## Create model using `tidymodels`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n\nlendingclub_rec <- recipe(int_rate ~ ., data = lendingclub_prep) |> \n  step_mutate(term = trimws(substr(term, 1,4))) |> \n  step_mutate(across(everything(), as.numeric)) |> \n  step_normalize(all_numeric_predictors()) |>\n  step_impute_mean(all_of(c(\"bc_open_to_buy\", \"bc_util\"))) |>   \n  step_filter(!if_any(everything(), is.na))\n\nlendingclub_rec\n#> \n#> ── Recipe ──────────────────────────────────────────────────────────────────────\n#> \n#> ── Inputs\n#> Number of variables by role\n#> outcome:   1\n#> predictor: 4\n#> \n#> ── Operations\n#> • Variable mutation for: trimws(substr(term, 1, 4))\n#> • Variable mutation for: across(everything(), as.numeric)\n#> • Centering and scaling for: all_numeric_predictors()\n#> • Mean imputation for: all_of(c(\"bc_open_to_buy\", \"bc_util\"))\n#> • Row filtering using: !if_any(everything(), is.na)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_lr <- linear_reg()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_wf <- workflow() |> \n  add_model(lendingclub_lr) |> \n  add_recipe(lendingclub_rec)\n\nlendingclub_wf\n#> ══ Workflow ════════════════════════════════════════════════════════════════════\n#> Preprocessor: Recipe\n#> Model: linear_reg()\n#> \n#> ── Preprocessor ────────────────────────────────────────────────────────────────\n#> 5 Recipe Steps\n#> \n#> • step_mutate()\n#> • step_mutate()\n#> • step_normalize()\n#> • step_impute_mean()\n#> • step_filter()\n#> \n#> ── Model ───────────────────────────────────────────────────────────────────────\n#> Linear Regression Model Specification (regression)\n#> \n#> Computational engine: lm\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_fit <- lendingclub_wf |> \n  fit(data = lendingclub_prep)\n\nlendingclub_fit\n#> ══ Workflow [trained] ══════════════════════════════════════════════════════════\n#> Preprocessor: Recipe\n#> Model: linear_reg()\n#> \n#> ── Preprocessor ────────────────────────────────────────────────────────────────\n#> 5 Recipe Steps\n#> \n#> • step_mutate()\n#> • step_mutate()\n#> • step_normalize()\n#> • step_impute_mean()\n#> • step_filter()\n#> \n#> ── Model ───────────────────────────────────────────────────────────────────────\n#> \n#> Call:\n#> stats::lm(formula = ..y ~ ., data = data)\n#> \n#> Coefficients:\n#>    (Intercept)            term         bc_util  bc_open_to_buy        all_util  \n#>        12.4993          1.7583          0.8462          0.1408          0.9984\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_fit |> \n  augment(lendingclub_prep) |> \n  metrics(int_rate, .pred)\n#> # A tibble: 3 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard      7.86  \n#> 2 rsq     standard      0.0162\n#> 3 mae     standard      5.67\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\npredict(lendingclub_fit, lendingclub_sample) |> \n  ggplot() +\n  geom_histogram(aes(.pred))\n#> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n#> Warning: Removed 1 row containing non-finite outside the scale range\n#> (`stat_bin()`).\n```\n\n::: {.cell-output-display}\n![](r-udfs-modeling_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Upload to Posit Connect\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(vetiver)\n\n\nv <- vetiver_model(lendingclub_fit, \"lendingclub_model\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pins)\n\nboard <- board_connect(\n  auth = \"manual\",\n  server = Sys.getenv(\"CONNECT_SERVER\"),\n  key = Sys.getenv(\"CONNECT_API_KEY\")\n)\n\nboard |> \n  vetiver_pin_write(v)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npredict_vetiver <- function(x) {\n  library(workflows)\n  board <- pins::board_connect(\n    auth = \"manual\", \n    server = \"https://connect.posit.it/\",\n    key = \"[YOUR CONNECT KEY]\"\n  )\n  model <- vetiver::vetiver_pin_read(board, \"edgar/lendingclub_model\")\n  preds <- predict(model, x)\n  x$pred <- preds[,1][[1]]\n  x[x$pred >= 20, ]\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npredict_vetiver(lendingclub_prep)\n```\n:::\n\n\n## Predict in Spark\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlendingclub_dat |> \n  select(int_rate, term, bc_util, bc_open_to_buy, all_util) |> \n  spark_apply(predict_vetiver) |> \n  count()\n```\n:::\n",
    "supporting": [
      "r-udfs-modeling_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}