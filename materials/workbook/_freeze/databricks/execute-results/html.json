{
  "hash": "87ead4e3ac4701b402bd1abc252b2d66",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Databricks Connect\"\nexecute: \n  eval: true\n  freeze: true\n  warning: false\n---\n\n\n\n\n\n\n## Connect to Databricks Connect cluster\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sparklyr)\nlibrary(dplyr)\nsc <- spark_connect(method = \"databricks_connect\")\n```\n:::\n\n\n\n\n## Uploading data from R\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(nycflights13)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_planes <- copy_to(sc, planes)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_planes |> \n  glimpse()\n#> Rows: ??\n#> Columns: 9\n#> Database: spark_connection\n#> $ tailnum      <chr> \"N10156\", \"N102UW\", \"N103US\", \"N104UW\", \"N10575\", \"N105UW…\n#> $ year         <int> 2004, 1998, 1999, 1999, 2002, 1999, 1999, 1999, 1999, 199…\n#> $ type         <chr> \"Fixed wing multi engine\", \"Fixed wing multi engine\", \"Fi…\n#> $ manufacturer <chr> \"EMBRAER\", \"AIRBUS INDUSTRIE\", \"AIRBUS INDUSTRIE\", \"AIRBU…\n#> $ model        <chr> \"EMB-145XR\", \"A320-214\", \"A320-214\", \"A320-214\", \"EMB-145…\n#> $ engines      <int> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n#> $ seats        <int> 55, 182, 182, 182, 55, 182, 182, 182, 182, 182, 55, 55, 5…\n#> $ speed        <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n#> $ engine       <chr> \"Turbo-fan\", \"Turbo-fan\", \"Turbo-fan\", \"Turbo-fan\", \"Turb…\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_planes |> \n  show_query()\n#> <SQL>\n#> SELECT *\n#> FROM `planes`\n```\n:::\n\n\n\n\n## Caching data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_diamonds <- tbl(sc, \"diamonds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_temp <- tbl_diamonds |> \n  select(cut, color, clarity, price) |> \n  compute()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_temp\n#> # Source:   table<`table_31b14e6f_791d_4b48_b346_471f9a338b79`> [?? x 4]\n#> # Database: spark_connection\n#>    cut       color clarity price\n#>    <chr>     <chr> <chr>   <int>\n#>  1 Ideal     E     SI2       326\n#>  2 Premium   E     SI1       326\n#>  3 Good      E     VS1       327\n#>  4 Premium   I     VS2       334\n#>  5 Good      J     SI2       335\n#>  6 Very Good J     VVS2      336\n#>  7 Very Good I     VVS1      336\n#>  8 Very Good H     SI1       337\n#>  9 Fair      E     VS2       337\n#> 10 Very Good H     VS1       338\n#> # ℹ more rows\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_temp |> \n  show_query()\n#> <SQL>\n#> SELECT *\n#> FROM `table_31b14e6f_791d_4b48_b346_471f9a338b79`\n```\n:::\n\n\n\n\n## Reading files\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_airports <- spark_read_csv(\n  sc = sc,\n  name = \"airports_csv\",\n  path = \"/Volumes/workshops/nycflights/2013/airports.csv\"\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_airports\n#> # Source:   table<`airports_csv`> [?? x 8]\n#> # Database: spark_connection\n#>    faa   name                             lat    lon   alt    tz dst   tzone    \n#>    <chr> <chr>                          <dbl>  <dbl> <int> <int> <chr> <chr>    \n#>  1 04G   Lansdowne Airport               41.1  -80.6  1044    -5 A     America/…\n#>  2 06A   Moton Field Municipal Airport   32.5  -85.7   264    -6 A     America/…\n#>  3 06C   Schaumburg Regional             42.0  -88.1   801    -6 A     America/…\n#>  4 06N   Randall Airport                 41.4  -74.4   523    -5 A     America/…\n#>  5 09J   Jekyll Island Airport           31.1  -81.4    11    -5 A     America/…\n#>  6 0A9   Elizabethton Municipal Airport  36.4  -82.2  1593    -5 A     America/…\n#>  7 0G6   Williams County Airport         41.5  -84.5   730    -5 A     America/…\n#>  8 0G7   Finger Lakes Regional Airport   42.9  -76.8   492    -5 A     America/…\n#>  9 0P2   Shoestring Aviation Airfield    39.8  -76.6  1000    -5 U     America/…\n#> 10 0S9   Jefferson County Intl           48.1 -123.    108    -8 A     America/…\n#> # ℹ more rows\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_airports |> \n  show_query()\n#> <SQL>\n#> SELECT *\n#> FROM `airports_csv`\n```\n:::\n\n\n\n\n## \"Mapping\" files\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights_mapped <- spark_read_csv(\n  sc = sc,\n  name = \"mapped\",\n  path = \"/Volumes/workshops/nycflights/2013/nycflights.csv\",\n  memory = FALSE\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflights_mapped |> \n  glimpse()\n#> Rows: ??\n#> Columns: 16\n#> Database: spark_connection\n#> $ year      <int> 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, …\n#> $ month     <int> 6, 5, 12, 5, 7, 1, 12, 8, 9, 4, 6, 11, 4, 3, 10, 1, 2, 8, 10…\n#> $ day       <int> 30, 7, 8, 14, 21, 1, 9, 13, 26, 30, 17, 22, 26, 25, 21, 23, …\n#> $ dep_time  <int> 940, 1657, 859, 1841, 1102, 1817, 1259, 1920, 725, 1323, 940…\n#> $ dep_delay <int> 15, -3, -1, -4, -3, -3, 14, 85, -10, 62, 5, 5, -2, 115, -4, …\n#> $ arr_time  <int> 1216, 2104, 1238, 2122, 1230, 2008, 1617, 2032, 1027, 1549, …\n#> $ arr_delay <int> -4, 10, 11, -34, -8, 3, 22, 71, -8, 60, -4, -2, 22, 91, -6, …\n#> $ carrier   <chr> \"VX\", \"DL\", \"DL\", \"DL\", \"9E\", \"AA\", \"WN\", \"B6\", \"AA\", \"EV\", …\n#> $ tailnum   <chr> \"N626VA\", \"N3760C\", \"N712TW\", \"N914DL\", \"N823AY\", \"N3AXAA\", …\n#> $ flight    <int> 407, 329, 422, 2391, 3652, 353, 1428, 1407, 2279, 4162, 20, …\n#> $ origin    <chr> \"JFK\", \"JFK\", \"JFK\", \"JFK\", \"LGA\", \"LGA\", \"EWR\", \"JFK\", \"LGA…\n#> $ dest      <chr> \"LAX\", \"SJU\", \"LAX\", \"TPA\", \"ORF\", \"ORD\", \"HOU\", \"IAD\", \"MIA…\n#> $ air_time  <int> 313, 216, 376, 135, 50, 138, 240, 48, 148, 110, 50, 161, 87,…\n#> $ distance  <int> 2475, 1598, 2475, 1005, 296, 733, 1411, 228, 1096, 820, 264,…\n#> $ hour      <int> 9, 16, 8, 18, 11, 18, 12, 19, 7, 13, 9, 13, 8, 20, 12, 20, 6…\n#> $ minute    <int> 40, 57, 59, 41, 2, 17, 59, 20, 25, 23, 40, 20, 9, 54, 17, 24…\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflights_mapped |> \n  count(carrier)\n#> # Source:   SQL [?? x 2]\n#> # Database: spark_connection\n#>    carrier     n\n#>    <chr>   <dbl>\n#>  1 UA       5770\n#>  2 AA       3188\n#>  3 EV       5142\n#>  4 B6       5376\n#>  5 DL       4751\n#>  6 OO          3\n#>  7 F9         69\n#>  8 YV         53\n#>  9 US       2015\n#> 10 MQ       2507\n#> # ℹ more rows\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsdf_sql(sc, \"select * from mapped limit 10\")\n#> # Source:   table<`sparklyr_tmp_table_2c3ea1e5_2fae_4a3a_a485_e26867c73f1d`> [10 x 16]\n#> # Database: spark_connection\n#>     year month   day dep_time dep_delay arr_time arr_delay carrier tailnum\n#>    <int> <int> <int>    <int>     <int>    <int>     <int> <chr>   <chr>  \n#>  1  2013     6    30      940        15     1216        -4 VX      N626VA \n#>  2  2013     5     7     1657        -3     2104        10 DL      N3760C \n#>  3  2013    12     8      859        -1     1238        11 DL      N712TW \n#>  4  2013     5    14     1841        -4     2122       -34 DL      N914DL \n#>  5  2013     7    21     1102        -3     1230        -8 9E      N823AY \n#>  6  2013     1     1     1817        -3     2008         3 AA      N3AXAA \n#>  7  2013    12     9     1259        14     1617        22 WN      N218WN \n#>  8  2013     8    13     1920        85     2032        71 B6      N284JB \n#>  9  2013     9    26      725       -10     1027        -8 AA      N3FSAA \n#> 10  2013     4    30     1323        62     1549        60 EV      N12163 \n#> # ℹ 7 more variables: flight <int>, origin <chr>, dest <chr>, air_time <int>,\n#> #   distance <int>, hour <int>, minute <int>\n```\n:::\n\n\n\n\n## Partial cache\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights_ord <- flights_mapped |> \n  filter(dest == \"ORD\") |> \n  compute()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflights_ord\n#> # Source:   table<`table_a13759d7_a228_400f_96f1_49aeb7a3d465`> [?? x 16]\n#> # Database: spark_connection\n#>     year month   day dep_time dep_delay arr_time arr_delay carrier tailnum\n#>    <int> <int> <int>    <int>     <int>    <int>     <int> <chr>   <chr>  \n#>  1  2013     1     1     1817        -3     2008         3 AA      N3AXAA \n#>  2  2013    10    21      859        -1     1036        11 UA      N57852 \n#>  3  2013     9    18      933        -7     1037       -43 AA      N514AA \n#>  4  2013     7    25      752        -3      917         2 MQ      N6EAMQ \n#>  5  2013     7     1     2007        82     2123        53 AA      N547AA \n#>  6  2013     9    29     2003        -2     2108       -22 MQ      N509MQ \n#>  7  2013     4    15      625        -5      752       -13 AA      N589AA \n#>  8  2013     8    24     1017        12     1113        -7 MQ      N517MQ \n#>  9  2013     9    20     1948       -12     2112       -20 UA      N814UA \n#> 10  2013     1    25     1814        54     2020        65 AA      N3CXAA \n#> # ℹ more rows\n#> # ℹ 7 more variables: flight <int>, origin <chr>, dest <chr>, air_time <int>,\n#> #   distance <int>, hour <int>, minute <int>\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflights_ord |> \n  show_query()\n#> <SQL>\n#> SELECT *\n#> FROM `table_a13759d7_a228_400f_96f1_49aeb7a3d465`\n```\n:::\n\n\n\n\n## End game\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights_mapped |> \n  select(tailnum, dest, origin, distance) |> \n  head() |> \n  left_join(tbl_planes, by = \"tailnum\")\n#> # Source:   SQL [6 x 12]\n#> # Database: spark_connection\n#>   tailnum dest  origin distance  year type      manufacturer model engines seats\n#>   <chr>   <chr> <chr>     <int> <dbl> <chr>     <chr>        <chr>   <dbl> <dbl>\n#> 1 N626VA  LAX   JFK        2475  2006 Fixed wi… AIRBUS       A320…       2   182\n#> 2 N3760C  SJU   JFK        1598  2001 Fixed wi… BOEING       737-…       2   189\n#> 3 N712TW  LAX   JFK        2475  1997 Fixed wi… BOEING       757-…       2   178\n#> 4 N914DL  TPA   JFK        1005  1988 Fixed wi… MCDONNELL D… MD-88       2   142\n#> 5 N823AY  ORF   LGA         296  2005 Fixed wi… BOMBARDIER … CL-6…       2    55\n#> 6 N3AXAA  ORD   LGA         733   NaN <NA>      <NA>         <NA>      NaN   NaN\n#> # ℹ 2 more variables: speed <dbl>, engine <chr>\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}