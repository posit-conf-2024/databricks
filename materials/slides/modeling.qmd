---
format: 
  revealjs:
    width: 1600
    height: 920
    max-scale: 1
    min-scale: 1
    smaller: true
    transition: fade
    background-transition: fade
    theme: theme.scss
    code-line-numbers: false
    menu: true
    code-block-height: 640px
    slide-number: true
engine: knitr
---

```{r}
#| include: false
unit_no <- 7
```

# {background-image="assets/background/content-slide.svg" background-size="1700px" background-color="#2a7070"}

:::{.content-slide-title}
Unit `r unit_no`
:::

:::{.content-slide}
Modeling <br/> with R UDFs
:::

## [Run R models in Spark]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

![](assets/modeling/topology.png){.absolute top="120" left="210" width="1200"}

## [1. Sample - Use *dplyr*]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

![](assets/remote-processing/dplyr.png){.absolute top="0" left="1300" width="150"}
![](assets/remote-processing/dbplyr.png){.absolute top="0" left="1450" width="150"}

<br/>

:::{.columns}
:::{.column width="50%"}

:::{.custom2}
:::{.incremental1}
- Use `dplyr`'s `slice_sample()` function
- Download enough data to be representative

:::
:::

:::
:::{.column width="50%"}
<br/><br/>
[
local <- remote |>  <br/>
[X]{style="color: #fff;"}  **slice_sample**(n = 100) |> <br/>
[X]{style="color: #fff;"}  collect()
]{style="color:#333; font-family:Helvetica Neue; font-weight:300;font-size:65px;"} 

:::
:::

## [2. Train - Ideally, *tidymodels*]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

![](assets/modeling/tidymodels.png){.absolute top="0" left="1450" width="150"}

:::{.columns}
:::{.column width="8%"}
:::
:::{.column width="90%"}
[Use your preferred method to fit the model locally in R]{style="font-size:55px;line-height:0.5;font-weight:600;color:#579297;"}
:::
:::


:::{.sample-code}
```r
library(tidymodels)

lendingclub_rec <- recipe(
  int_rate ~ ., 
  data = lendingclub_prep
  ) |> 
  step_mutate(term = trimws(substr(term, 1,4))) |> 
  step_mutate(across(everything(), as.numeric)) |> 
  step_normalize(all_numeric_predictors()) |>
  step_impute_mean(all_of(c("bc_open_to_buy", "bc_util"))) |>   
  step_filter(!if_any(everything(), is.na))

```
:::

## [3. Publish - Package with *vetiver*]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

![](assets/modeling/vetiver.png){.absolute top="0" left="1450" width="150"}

:::{.columns}
:::{.column width="45%"}

:::{.custom2}
:::{.incremental1}
- `vetiver` packages `tidymodels` workflows and models
- Model is automatically reduced in size
- Output is easy to load into anothe R session
:::
:::

:::
:::{.column width="55%"}
[
library(vetiver) <br/>
<br>
m <- **vetiver_model**( <br/>
[X]{style="color: #fff;"}**model** = model, <br/>
[X]{style="color: #fff;"}**model_name** = "model" <br/>
[X]{style="color: #fff;"}) <br/>
<br>
saveRDS(m, "model.rds") <br/>
]{style="color:#333; font-family:Helvetica Neue; font-weight:300;font-size:65px;"} 

:::
:::

## [3. Publish - Transfer model file]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

![](assets/modeling/uc-volume.png){.absolute top="90" left="800" width="680"}

:::{.columns}
:::{.column width="45%"}

:::{.custom2}
:::{.incremental1}
- Copy the R model where Spark can access
- Location **has** to be secure
- Options Databricks UC, s3 buckets, Posit Connect, others
:::
:::

:::
:::{.column width="55%"}

:::
:::

## [4. Predict - Create the function]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

[It needs to read the model file, runs prediction, and process results]{style="font-size:55px;line-height:1.5;font-weight:600;color:#579297;"}

:::{.sample-code}
```r
my_function <- function(x) {
  library(workflows)
  library(vetiver)
  model <- readRDS("model.rds")
  preds <- predict(model, x)
  x$pred <- preds[,1][[1]]
  x
}
```
:::

## [4. Predict - Test the function]{style="color:#666;"} {background-image="assets/background/slide-light.svg" background-size="1700px" background-color="white"}

:::{.columns}
:::{.column width="13%"}
:::
:::{.column width="80%"}
[Good practice to test the function with local data]{style="font-size:55px;line-height:1.5;font-weight:600;color:#579297;"}
:::
:::


```r
my_function(local)
```


